{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@angular-material-extensions/select-country/lib/db.ts","ng://@angular-material-extensions/select-country/lib/mat-select-country.component.html","ng://@angular-material-extensions/select-country/lib/mat-select-country.component.ts","ng://@angular-material-extensions/select-country/lib/mat-select-country.module.ts"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","COUNTRIES_DB","name","alpha2Code","alpha3Code","numericCode","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵtextInterpolate2","MatSelectCountryComponent","this","placeHolder","onCountrySelected","EventEmitter","countryFormControl","FormControl","countries","modelChanged","Subject","debounceTime","filterString","prototype","ngOnInit","_this","subscription","pipe","startWith","subscribe","_filter","ngOnChanges","changes","country","currentValue","newValue_1","toUpperCase","selectedCountry","find","setValue","undefined","filterValue","toLowerCase","itemsLoadSize","filteredOptions","slice","filter","option","includes","onBlur","nullable","emit","onOptionsSelected","$event","autocompleteScroll","setTimeout","statesAutocompleteRef","autocompleteTrigger","panel","fromEvent","nativeElement","takeUntil","panelClosingActions","scrollTop","scrollHeight","clientHeight","fromIndex","toIndex","arguments","concat","__spread","inputChanged","ngOnDestroy","unsubscribe","selectors","viewQuery","rf","ctx","MatAutocompleteTrigger","i0.ɵɵtemplate","i0.ɵɵlistener","target","_r1","readonly","disabled","MatSelectCountryModule","iconRegistry","sanitizer","registerCountries","COUNTRIES_DB_1","COUNTRIES_DB_1_1","countryAlpha2Code","addSvgIcon","bypassSecurityTrustResourceUrl","core","ɵɵinject","icon","MatIconRegistry","platformBrowser","DomSanitizer","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","MatButtonModule","MatMenuModule","MatInputModule","MatAutocompleteModule","MatIconModule","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Country} from './mat-select-country.component';\r\n\r\nexport const COUNTRIES_DB: Country[] =\r\n  [\r\n    {\r\n      name: 'Afghanistan',\r\n      alpha2Code: 'AF',\r\n      alpha3Code: 'AFG',\r\n      numericCode: '004'\r\n    },\r\n    {\r\n      name: 'Albania',\r\n      alpha2Code: 'AL',\r\n      alpha3Code: 'ALB',\r\n      numericCode: '008'\r\n    },\r\n    {\r\n      name: 'Algeria',\r\n      alpha2Code: 'DZ',\r\n      alpha3Code: 'DZA',\r\n      numericCode: '012'\r\n    },\r\n    {\r\n      name: 'American Samoa',\r\n      alpha2Code: 'AS',\r\n      alpha3Code: 'ASM',\r\n      numericCode: '016'\r\n    },\r\n    {\r\n      name: 'Andorra',\r\n      alpha2Code: 'AD',\r\n      alpha3Code: 'AND',\r\n      numericCode: '020'\r\n    },\r\n    {\r\n      name: 'Angola',\r\n      alpha2Code: 'AO',\r\n      alpha3Code: 'AGO',\r\n      numericCode: '024'\r\n    },\r\n    {\r\n      name: 'Antigua and Barbuda',\r\n      alpha2Code: 'AG',\r\n      alpha3Code: 'ATG',\r\n      numericCode: '028'\r\n    },\r\n    {\r\n      name: 'Argentina',\r\n      alpha2Code: 'AR',\r\n      alpha3Code: 'ARG',\r\n      numericCode: '032'\r\n    },\r\n    {\r\n      name: 'Armenia',\r\n      alpha2Code: 'AM',\r\n      alpha3Code: 'ARM',\r\n      numericCode: '051'\r\n    },\r\n    {\r\n      name: 'Australia',\r\n      alpha2Code: 'AU',\r\n      alpha3Code: 'AUS',\r\n      numericCode: '036'\r\n    },\r\n    {\r\n      name: 'Austria',\r\n      alpha2Code: 'AT',\r\n      alpha3Code: 'AUT',\r\n      numericCode: '040'\r\n    },\r\n    {\r\n      name: 'Azerbaijan',\r\n      alpha2Code: 'AZ',\r\n      alpha3Code: 'AZE',\r\n      numericCode: '031'\r\n    },\r\n    {\r\n      name: 'Bahamas',\r\n      alpha2Code: 'BS',\r\n      alpha3Code: 'BHS',\r\n      numericCode: '044'\r\n    },\r\n    {\r\n      name: 'Bahrain',\r\n      alpha2Code: 'BH',\r\n      alpha3Code: 'BHR',\r\n      numericCode: '048'\r\n    },\r\n    {\r\n      name: 'Bangladesh',\r\n      alpha2Code: 'BD',\r\n      alpha3Code: 'BGD',\r\n      numericCode: '050'\r\n    },\r\n    {\r\n      name: 'Barbados',\r\n      alpha2Code: 'BB',\r\n      alpha3Code: 'BRB',\r\n      numericCode: '052'\r\n    },\r\n    {\r\n      name: 'Belarus',\r\n      alpha2Code: 'BY',\r\n      alpha3Code: 'BLR',\r\n      numericCode: '112'\r\n    },\r\n    {\r\n      name: 'Belgium',\r\n      alpha2Code: 'BE',\r\n      alpha3Code: 'BEL',\r\n      numericCode: '056'\r\n    },\r\n    {\r\n      name: 'Belize',\r\n      alpha2Code: 'BZ',\r\n      alpha3Code: 'BLZ',\r\n      numericCode: '084'\r\n    },\r\n    {\r\n      name: 'Benin',\r\n      alpha2Code: 'BJ',\r\n      alpha3Code: 'BEN',\r\n      numericCode: '204'\r\n    },\r\n    {\r\n      name: 'Bermuda',\r\n      alpha2Code: 'BM',\r\n      alpha3Code: 'BMU',\r\n      numericCode: '060'\r\n    },\r\n    {\r\n      name: 'Bhutan',\r\n      alpha2Code: 'BT',\r\n      alpha3Code: 'BTN',\r\n      numericCode: '064'\r\n    },\r\n    {\r\n      name: 'Bolivia',\r\n      alpha2Code: 'BO',\r\n      alpha3Code: 'BOL',\r\n      numericCode: '068'\r\n    },\r\n    {\r\n      name: 'Bonaire, Sint Eustatius and Saba',\r\n      alpha2Code: 'BQ',\r\n      alpha3Code: 'BES',\r\n      numericCode: '535'\r\n    },\r\n    {\r\n      name: 'Bosnia and Herzegovina',\r\n      alpha2Code: 'BA',\r\n      alpha3Code: 'BIH',\r\n      numericCode: '070'\r\n    },\r\n    {\r\n      name: 'Botswana',\r\n      alpha2Code: 'BW',\r\n      alpha3Code: 'BWA',\r\n      numericCode: '072'\r\n    },\r\n    {\r\n      name: 'Bouvet Island',\r\n      alpha2Code: 'BV',\r\n      alpha3Code: 'BVT',\r\n      numericCode: '074'\r\n    },\r\n    {\r\n      name: 'Brazil',\r\n      alpha2Code: 'BR',\r\n      alpha3Code: 'BRA',\r\n      numericCode: '076'\r\n    },\r\n    {\r\n      name: 'Brunei',\r\n      alpha2Code: 'BN',\r\n      alpha3Code: 'BRN',\r\n      numericCode: '096'\r\n    },\r\n    {\r\n      name: 'Bulgaria',\r\n      alpha2Code: 'BG',\r\n      alpha3Code: 'BGR',\r\n      numericCode: '100'\r\n    },\r\n    {\r\n      name: 'Burkina Faso',\r\n      alpha2Code: 'BF',\r\n      alpha3Code: 'BFA',\r\n      numericCode: '854'\r\n    },\r\n    {\r\n      name: 'Burundi',\r\n      alpha2Code: 'BI',\r\n      alpha3Code: 'BDI',\r\n      numericCode: '108'\r\n    },\r\n    {\r\n      name: 'Cabo Verde',\r\n      alpha2Code: 'CV',\r\n      alpha3Code: 'CPV',\r\n      numericCode: '132'\r\n    },\r\n    {\r\n      name: 'Cambodia',\r\n      alpha2Code: 'KH',\r\n      alpha3Code: 'KHM',\r\n      numericCode: '116'\r\n    },\r\n    {\r\n      name: 'Cameroon',\r\n      alpha2Code: 'CM',\r\n      alpha3Code: 'CMR',\r\n      numericCode: '120'\r\n    },\r\n    {\r\n      name: 'Canada',\r\n      alpha2Code: 'CA',\r\n      alpha3Code: 'CAN',\r\n      numericCode: '124'\r\n    },\r\n    {\r\n      name: 'Central African Republic',\r\n      alpha2Code: 'CF',\r\n      alpha3Code: 'CAF',\r\n      numericCode: '140'\r\n    },\r\n    {\r\n      name: 'Chad',\r\n      alpha2Code: 'TD',\r\n      alpha3Code: 'TCD',\r\n      numericCode: '148'\r\n    },\r\n    {\r\n      name: 'Chile',\r\n      alpha2Code: 'CL',\r\n      alpha3Code: 'CHL',\r\n      numericCode: '152'\r\n    },\r\n    {\r\n      name: 'China',\r\n      alpha2Code: 'CN',\r\n      alpha3Code: 'CHN',\r\n      numericCode: '156'\r\n    },\r\n    {\r\n      name: 'Colombia',\r\n      alpha2Code: 'CO',\r\n      alpha3Code: 'COL',\r\n      numericCode: '170'\r\n    },\r\n    {\r\n      name: 'Congo (Democratic Republic of the)',\r\n      alpha2Code: 'CD',\r\n      alpha3Code: 'COD',\r\n      numericCode: '180'\r\n    },\r\n    {\r\n      name: 'Congo (Republic of the)',\r\n      alpha2Code: 'CG',\r\n      alpha3Code: 'COG',\r\n      numericCode: '178'\r\n    },\r\n    {\r\n      name: 'Costa Rica',\r\n      alpha2Code: 'CR',\r\n      alpha3Code: 'CRI',\r\n      numericCode: '188'\r\n    },\r\n    {\r\n      name: 'Croatia',\r\n      alpha2Code: 'HR',\r\n      alpha3Code: 'HRV',\r\n      numericCode: '191'\r\n    },\r\n    {\r\n      name: 'Cuba',\r\n      alpha2Code: 'CU',\r\n      alpha3Code: 'CUB',\r\n      numericCode: '192'\r\n    },\r\n    {\r\n      name: 'Cyprus',\r\n      alpha2Code: 'CY',\r\n      alpha3Code: 'CYP',\r\n      numericCode: '196'\r\n    },\r\n    {\r\n      name: 'Czechia',\r\n      alpha2Code: 'CZ',\r\n      alpha3Code: 'CZE',\r\n      numericCode: '203'\r\n    },\r\n    {\r\n      name: 'Côte d\\'Ivoire',\r\n      alpha2Code: 'CI',\r\n      alpha3Code: 'CIV',\r\n      numericCode: '384'\r\n    },\r\n    {\r\n      name: 'Denmark',\r\n      alpha2Code: 'DK',\r\n      alpha3Code: 'DNK',\r\n      numericCode: '208'\r\n    },\r\n    {\r\n      name: 'Djibouti',\r\n      alpha2Code: 'DJ',\r\n      alpha3Code: 'DJI',\r\n      numericCode: '262'\r\n    },\r\n    {\r\n      name: 'Dominica',\r\n      alpha2Code: 'DM',\r\n      alpha3Code: 'DMA',\r\n      numericCode: '212'\r\n    },\r\n    {\r\n      name: 'Dominican Republic',\r\n      alpha2Code: 'DO',\r\n      alpha3Code: 'DOM',\r\n      numericCode: '214'\r\n    },\r\n    {\r\n      name: 'Ecuador',\r\n      alpha2Code: 'EC',\r\n      alpha3Code: 'ECU',\r\n      numericCode: '218'\r\n    },\r\n    {\r\n      name: 'Egypt',\r\n      alpha2Code: 'EG',\r\n      alpha3Code: 'EGY',\r\n      numericCode: '818'\r\n    },\r\n    {\r\n      name: 'El Salvador',\r\n      alpha2Code: 'SV',\r\n      alpha3Code: 'SLV',\r\n      numericCode: '222'\r\n    },\r\n    {\r\n      name: 'Equatorial Guinea',\r\n      alpha2Code: 'GQ',\r\n      alpha3Code: 'GNQ',\r\n      numericCode: '226'\r\n    },\r\n    {\r\n      name: 'Eritrea',\r\n      alpha2Code: 'ER',\r\n      alpha3Code: 'ERI',\r\n      numericCode: '232'\r\n    },\r\n    {\r\n      name: 'Estonia',\r\n      alpha2Code: 'EE',\r\n      alpha3Code: 'EST',\r\n      numericCode: '233'\r\n    },\r\n    {\r\n      name: 'Eswatini',\r\n      alpha2Code: 'SZ',\r\n      alpha3Code: 'SWZ',\r\n      numericCode: '748'\r\n    },\r\n    {\r\n      name: 'Ethiopia',\r\n      alpha2Code: 'ET',\r\n      alpha3Code: 'ETH',\r\n      numericCode: '231'\r\n    },\r\n    {\r\n      name: 'Fiji',\r\n      alpha2Code: 'FJ',\r\n      alpha3Code: 'FJI',\r\n      numericCode: '242'\r\n    },\r\n    {\r\n      name: 'Finland',\r\n      alpha2Code: 'FI',\r\n      alpha3Code: 'FIN',\r\n      numericCode: '246'\r\n    },\r\n    {\r\n      name: 'France',\r\n      alpha2Code: 'FR',\r\n      alpha3Code: 'FRA',\r\n      numericCode: '250'\r\n    },\r\n    {\r\n      name: 'Gabon',\r\n      alpha2Code: 'GA',\r\n      alpha3Code: 'GAB',\r\n      numericCode: '266'\r\n    },\r\n    {\r\n      name: 'Gambia',\r\n      alpha2Code: 'GM',\r\n      alpha3Code: 'GMB',\r\n      numericCode: '270'\r\n    },\r\n    {\r\n      name: 'Georgia',\r\n      alpha2Code: 'GE',\r\n      alpha3Code: 'GEO',\r\n      numericCode: '268'\r\n    },\r\n    {\r\n      name: 'Germany',\r\n      alpha2Code: 'DE',\r\n      alpha3Code: 'DEU',\r\n      numericCode: '276'\r\n    },\r\n    {\r\n      name: 'Ghana',\r\n      alpha2Code: 'GH',\r\n      alpha3Code: 'GHA',\r\n      numericCode: '288'\r\n    },\r\n    {\r\n      name: 'Greece',\r\n      alpha2Code: 'GR',\r\n      alpha3Code: 'GRC',\r\n      numericCode: '300'\r\n    },\r\n    {\r\n      name: 'Greenland',\r\n      alpha2Code: 'GL',\r\n      alpha3Code: 'GRL',\r\n      numericCode: '304'\r\n    },\r\n    {\r\n      name: 'Guadeloupe',\r\n      alpha2Code: 'GP',\r\n      alpha3Code: 'GLP',\r\n      numericCode: '312'\r\n    },\r\n    {\r\n      name: 'Grenada',\r\n      alpha2Code: 'GD',\r\n      alpha3Code: 'GRD',\r\n      numericCode: '308'\r\n    },\r\n    {\r\n      name: 'Guatemala',\r\n      alpha2Code: 'GT',\r\n      alpha3Code: 'GTM',\r\n      numericCode: '320'\r\n    },\r\n    {\r\n      name: 'Guinea',\r\n      alpha2Code: 'GN',\r\n      alpha3Code: 'GIN',\r\n      numericCode: '324'\r\n    },\r\n    {\r\n      name: 'Guinea-Bissau',\r\n      alpha2Code: 'GW',\r\n      alpha3Code: 'GNB',\r\n      numericCode: '624'\r\n    },\r\n    {\r\n      name: 'Guyana',\r\n      alpha2Code: 'GY',\r\n      alpha3Code: 'GUY',\r\n      numericCode: '328'\r\n    },\r\n    {\r\n      name: 'Haiti',\r\n      alpha2Code: 'HT',\r\n      alpha3Code: 'HTI',\r\n      numericCode: '332'\r\n    },\r\n    {\r\n      name: 'Honduras',\r\n      alpha2Code: 'HN',\r\n      alpha3Code: 'HND',\r\n      numericCode: '340'\r\n    },\r\n    {\r\n      name: 'Hong Kong',\r\n      alpha2Code: 'HK',\r\n      alpha3Code: 'HKG',\r\n      numericCode: '344'\r\n    },\r\n    {\r\n      name: 'Hungary',\r\n      alpha2Code: 'HU',\r\n      alpha3Code: 'HUN',\r\n      numericCode: '348'\r\n    },\r\n    {\r\n      name: 'Iceland',\r\n      alpha2Code: 'IS',\r\n      alpha3Code: 'ISL',\r\n      numericCode: '352'\r\n    },\r\n    {\r\n      name: 'India',\r\n      alpha2Code: 'IN',\r\n      alpha3Code: 'IND',\r\n      numericCode: '356'\r\n    },\r\n    {\r\n      name: 'Indonesia',\r\n      alpha2Code: 'ID',\r\n      alpha3Code: 'IDN',\r\n      numericCode: '360'\r\n    },\r\n    {\r\n      name: 'Iran',\r\n      alpha2Code: 'IR',\r\n      alpha3Code: 'IRN',\r\n      numericCode: '364'\r\n    },\r\n    {\r\n      name: 'Iraq',\r\n      alpha2Code: 'IQ',\r\n      alpha3Code: 'IRQ',\r\n      numericCode: '368'\r\n    },\r\n    {\r\n      name: 'Ireland',\r\n      alpha2Code: 'IE',\r\n      alpha3Code: 'IRL',\r\n      numericCode: '372'\r\n    },\r\n    {\r\n      name: 'Israel',\r\n      alpha2Code: 'IL',\r\n      alpha3Code: 'ISR',\r\n      numericCode: '376'\r\n    },\r\n    {\r\n      name: 'Italy',\r\n      alpha2Code: 'IT',\r\n      alpha3Code: 'ITA',\r\n      numericCode: '380'\r\n    },\r\n    {\r\n      name: 'Jamaica',\r\n      alpha2Code: 'JM',\r\n      alpha3Code: 'JAM',\r\n      numericCode: '388'\r\n    },\r\n    {\r\n      name: 'Japan',\r\n      alpha2Code: 'JP',\r\n      alpha3Code: 'JPN',\r\n      numericCode: '392'\r\n    },\r\n    {\r\n      name: 'Jersey',\r\n      alpha2Code: 'JE',\r\n      alpha3Code: 'JEY',\r\n      numericCode: '832'\r\n    },\r\n    {\r\n      name: 'Jordan',\r\n      alpha2Code: 'JO',\r\n      alpha3Code: 'JOR',\r\n      numericCode: '400'\r\n    },\r\n    {\r\n      name: 'Kazakhstan',\r\n      alpha2Code: 'KZ',\r\n      alpha3Code: 'KAZ',\r\n      numericCode: '398'\r\n    },\r\n    {\r\n      name: 'Kenya',\r\n      alpha2Code: 'KE',\r\n      alpha3Code: 'KEN',\r\n      numericCode: '404'\r\n    },\r\n    {\r\n      name: 'Kiribati',\r\n      alpha2Code: 'KI',\r\n      alpha3Code: 'KIR',\r\n      numericCode: '296'\r\n    },\r\n    {\r\n      name: 'Korea (the Democratic People\\'s Republic of)',\r\n      alpha2Code: 'KP',\r\n      alpha3Code: 'PRK',\r\n      numericCode: '408'\r\n    },\r\n    {\r\n      name: 'Korea (the Republic of)\\t',\r\n      alpha2Code: 'KR',\r\n      alpha3Code: 'KOR',\r\n      numericCode: '410'\r\n    },\r\n    {\r\n      name: 'Kuwait',\r\n      alpha2Code: 'KW',\r\n      alpha3Code: 'KWT',\r\n      numericCode: '414'\r\n    },\r\n    {\r\n      name: 'Kyrgyzstan',\r\n      alpha2Code: 'KG',\r\n      alpha3Code: 'KGZ',\r\n      numericCode: '417'\r\n    },\r\n    {\r\n      name: 'Laos',\r\n      alpha2Code: 'LA',\r\n      alpha3Code: 'LAO',\r\n      numericCode: '418'\r\n    },\r\n    {\r\n      name: 'Latvia',\r\n      alpha2Code: 'LV',\r\n      alpha3Code: 'LVA',\r\n      numericCode: '428'\r\n    },\r\n    {\r\n      name: 'Lebanon',\r\n      alpha2Code: 'LB',\r\n      alpha3Code: 'LBN',\r\n      numericCode: '422'\r\n    },\r\n    {\r\n      name: 'Lesotho',\r\n      alpha2Code: 'LS',\r\n      alpha3Code: 'LSO',\r\n      numericCode: '426'\r\n    },\r\n    {\r\n      name: 'Liberia',\r\n      alpha2Code: 'LR',\r\n      alpha3Code: 'LBR',\r\n      numericCode: '430'\r\n    },\r\n    {\r\n      name: 'Libya',\r\n      alpha2Code: 'LY',\r\n      alpha3Code: 'LBY',\r\n      numericCode: '434'\r\n    },\r\n    {\r\n      name: 'Liechtenstein',\r\n      alpha2Code: 'LI',\r\n      alpha3Code: 'LIE',\r\n      numericCode: '438'\r\n    },\r\n    {\r\n      name: 'Lithuania',\r\n      alpha2Code: 'LT',\r\n      alpha3Code: 'LTU',\r\n      numericCode: '440'\r\n    },\r\n    {\r\n      name: 'Luxembourg',\r\n      alpha2Code: 'LU',\r\n      alpha3Code: 'LUX',\r\n      numericCode: '442'\r\n    },\r\n    {\r\n      name: 'Macao',\r\n      alpha2Code: 'MO',\r\n      alpha3Code: 'MAC',\r\n      numericCode: '446'\r\n    },\r\n    {\r\n      name: 'Madagascar',\r\n      alpha2Code: 'MG',\r\n      alpha3Code: 'MDG',\r\n      numericCode: '450'\r\n    },\r\n    {\r\n      name: 'Malawi',\r\n      alpha2Code: 'MW',\r\n      alpha3Code: 'MWI',\r\n      numericCode: '454'\r\n    },\r\n    {\r\n      name: 'Malaysia',\r\n      alpha2Code: 'MY',\r\n      alpha3Code: 'MYS',\r\n      numericCode: '458'\r\n    },\r\n    {\r\n      name: 'Maldives',\r\n      alpha2Code: 'MV',\r\n      alpha3Code: 'MDV',\r\n      numericCode: '462'\r\n    },\r\n    {\r\n      name: 'Mali',\r\n      alpha2Code: 'ML',\r\n      alpha3Code: 'MLI',\r\n      numericCode: '466'\r\n    },\r\n    {\r\n      name: 'Malta',\r\n      alpha2Code: 'MT',\r\n      alpha3Code: 'MLT',\r\n      numericCode: '470'\r\n    },\r\n    {\r\n      name: 'Mauritania',\r\n      alpha2Code: 'MR',\r\n      alpha3Code: 'MRT',\r\n      numericCode: '478'\r\n    },\r\n    {\r\n      name: 'Mauritius',\r\n      alpha2Code: 'MU',\r\n      alpha3Code: 'MUS',\r\n      numericCode: '480'\r\n    },\r\n    {\r\n      name: 'Mexico',\r\n      alpha2Code: 'MX',\r\n      alpha3Code: 'MEX',\r\n      numericCode: '484'\r\n    },\r\n    {\r\n      name: 'Moldova',\r\n      alpha2Code: 'MD',\r\n      alpha3Code: 'MDA',\r\n      numericCode: '498'\r\n    },\r\n    {\r\n      name: 'Monaco',\r\n      alpha2Code: 'MC',\r\n      alpha3Code: 'MCO',\r\n      numericCode: '492'\r\n    },\r\n    {\r\n      name: 'Mongolia',\r\n      alpha2Code: 'MN',\r\n      alpha3Code: 'MNG',\r\n      numericCode: '496'\r\n    },\r\n    {\r\n      name: 'Montenegro',\r\n      alpha2Code: 'ME',\r\n      alpha3Code: 'MNE',\r\n      numericCode: '499'\r\n    },\r\n    {\r\n      name: 'Morocco',\r\n      alpha2Code: 'MA',\r\n      alpha3Code: 'MAR',\r\n      numericCode: '504'\r\n    },\r\n    {\r\n      name: 'Mozambique',\r\n      alpha2Code: 'MZ',\r\n      alpha3Code: 'MOZ',\r\n      numericCode: '508'\r\n    },\r\n    {\r\n      name: 'Myanmar',\r\n      alpha2Code: 'MM',\r\n      alpha3Code: 'MMR',\r\n      numericCode: '104'\r\n    },\r\n    {\r\n      name: 'Namibia',\r\n      alpha2Code: 'NA',\r\n      alpha3Code: 'NAM',\r\n      numericCode: '516'\r\n    },\r\n    {\r\n      name: 'Nauru',\r\n      alpha2Code: 'NR',\r\n      alpha3Code: 'NRU',\r\n      numericCode: '520'\r\n    },\r\n    {\r\n      name: 'Nepal',\r\n      alpha2Code: 'NP',\r\n      alpha3Code: 'NPL',\r\n      numericCode: '524'\r\n    },\r\n    {\r\n      name: 'Netherlands',\r\n      alpha2Code: 'NL',\r\n      alpha3Code: 'NLD',\r\n      numericCode: '528'\r\n    },\r\n    {\r\n      name: 'New Caledonia',\r\n      alpha2Code: 'NC',\r\n      alpha3Code: 'NCL',\r\n      numericCode: '540'\r\n    },\r\n    {\r\n      name: 'New Zealand',\r\n      alpha2Code: 'NZ',\r\n      alpha3Code: 'NZL',\r\n      numericCode: '554'\r\n    },\r\n    {\r\n      name: 'Nicaragua',\r\n      alpha2Code: 'NI',\r\n      alpha3Code: 'NIC',\r\n      numericCode: '558'\r\n    },\r\n    {\r\n      name: 'Niger',\r\n      alpha2Code: 'NE',\r\n      alpha3Code: 'NER',\r\n      numericCode: '562'\r\n    },\r\n    {\r\n      name: 'Nigeria',\r\n      alpha2Code: 'NG',\r\n      alpha3Code: 'NGA',\r\n      numericCode: '566'\r\n    },\r\n    {\r\n      name: 'Norway',\r\n      alpha2Code: 'NO',\r\n      alpha3Code: 'NOR',\r\n      numericCode: '578'\r\n    },\r\n    {\r\n      name: 'Oman',\r\n      alpha2Code: 'OM',\r\n      alpha3Code: 'OMN',\r\n      numericCode: '512'\r\n    },\r\n    {\r\n      name: 'Pakistan',\r\n      alpha2Code: 'PK',\r\n      alpha3Code: 'PAK',\r\n      numericCode: '586'\r\n    },\r\n    {\r\n      name: 'Palau',\r\n      alpha2Code: 'PW',\r\n      alpha3Code: 'PLW',\r\n      numericCode: '585'\r\n    },\r\n    {\r\n      name: 'Palestine',\r\n      alpha2Code: 'PS',\r\n      alpha3Code: 'PSE',\r\n      numericCode: '275'\r\n    },\r\n    {\r\n      name: 'Panama',\r\n      alpha2Code: 'PA',\r\n      alpha3Code: 'PAN',\r\n      numericCode: '591'\r\n    },\r\n    {\r\n      name: 'Papua New Guinea',\r\n      alpha2Code: 'PG',\r\n      alpha3Code: 'PNG',\r\n      numericCode: '598'\r\n    },\r\n    {\r\n      name: 'Paraguay',\r\n      alpha2Code: 'PY',\r\n      alpha3Code: 'PRY',\r\n      numericCode: '600'\r\n    },\r\n    {\r\n      name: 'Peru',\r\n      alpha2Code: 'PE',\r\n      alpha3Code: 'PER',\r\n      numericCode: '604'\r\n    },\r\n    {\r\n      name: 'Philippines',\r\n      alpha2Code: 'PH',\r\n      alpha3Code: 'PHL',\r\n      numericCode: '608'\r\n    },\r\n    {\r\n      name: 'Poland',\r\n      alpha2Code: 'PL',\r\n      alpha3Code: 'POL',\r\n      numericCode: '616'\r\n    },\r\n    {\r\n      name: 'Portugal',\r\n      alpha2Code: 'PT',\r\n      alpha3Code: 'PRT',\r\n      numericCode: '620'\r\n    },\r\n    {\r\n      name: 'Puerto Rico',\r\n      alpha2Code: 'PR',\r\n      alpha3Code: 'PRI',\r\n      numericCode: '630'\r\n    },\r\n    {\r\n      name: 'Qatar',\r\n      alpha2Code: 'QA',\r\n      alpha3Code: 'QAT',\r\n      numericCode: '634'\r\n    },\r\n    {\r\n      name: 'Republic of North Macedonia',\r\n      alpha2Code: 'MK',\r\n      alpha3Code: 'MKD',\r\n      numericCode: '807'\r\n    },\r\n    {\r\n      name: 'Romania',\r\n      alpha2Code: 'RO',\r\n      alpha3Code: 'ROU',\r\n      numericCode: '642'\r\n    },\r\n    {\r\n      name: 'Russian Federation (the)',\r\n      alpha2Code: 'RU',\r\n      alpha3Code: 'RUS',\r\n      numericCode: '643'\r\n    },\r\n    {\r\n      name: 'Rwanda',\r\n      alpha2Code: 'RW',\r\n      alpha3Code: 'RWA',\r\n      numericCode: '646'\r\n    },\r\n    {\r\n      name: 'Saint Kitts and Nevis',\r\n      alpha2Code: 'KN',\r\n      alpha3Code: 'KNA',\r\n      numericCode: '659'\r\n    },\r\n    {\r\n      name: 'Saint Lucia',\r\n      alpha2Code: 'LC',\r\n      alpha3Code: 'LCA',\r\n      numericCode: '662'\r\n    },\r\n    {\r\n      name: 'Saint Vincent and the Grenadines',\r\n      alpha2Code: 'VC',\r\n      alpha3Code: 'VCT',\r\n      numericCode: '670'\r\n    },\r\n    {\r\n      name: 'Samoa',\r\n      alpha2Code: 'WS',\r\n      alpha3Code: 'WSM',\r\n      numericCode: '882'\r\n    },\r\n    {\r\n      name: 'San Marino',\r\n      alpha2Code: 'SM',\r\n      alpha3Code: 'SMR',\r\n      numericCode: '674'\r\n    },\r\n    {\r\n      name: 'Sao Tome and Principe',\r\n      alpha2Code: 'ST',\r\n      alpha3Code: 'STP',\r\n      numericCode: '678'\r\n    },\r\n    {\r\n      name: 'Saudi Arabia',\r\n      alpha2Code: 'SA',\r\n      alpha3Code: 'SAU',\r\n      numericCode: '682'\r\n    },\r\n    {\r\n      name: 'Senegal',\r\n      alpha2Code: 'SN',\r\n      alpha3Code: 'SEN',\r\n      numericCode: '686'\r\n    },\r\n    {\r\n      name: 'Serbia',\r\n      alpha2Code: 'RS',\r\n      alpha3Code: 'SRB',\r\n      numericCode: '688'\r\n    },\r\n    {\r\n      name: 'Seychelles',\r\n      alpha2Code: 'SC',\r\n      alpha3Code: 'SYC',\r\n      numericCode: '690'\r\n    },\r\n    {\r\n      name: 'Sierra Leone',\r\n      alpha2Code: 'SL',\r\n      alpha3Code: 'SLE',\r\n      numericCode: '694'\r\n    },\r\n    {\r\n      name: 'Singapore',\r\n      alpha2Code: 'SG',\r\n      alpha3Code: 'SGP',\r\n      numericCode: '702'\r\n    },\r\n    {\r\n      name: 'Slovakia',\r\n      alpha2Code: 'SK',\r\n      alpha3Code: 'SVK',\r\n      numericCode: '703'\r\n    },\r\n    {\r\n      name: 'Slovenia',\r\n      alpha2Code: 'SI',\r\n      alpha3Code: 'SVN',\r\n      numericCode: '705'\r\n    },\r\n    {\r\n      name: 'Solomon Islands',\r\n      alpha2Code: 'SB',\r\n      alpha3Code: 'SLB',\r\n      numericCode: '090'\r\n    },\r\n    {\r\n      name: 'Somalia',\r\n      alpha2Code: 'SO',\r\n      alpha3Code: 'SOM',\r\n      numericCode: '706'\r\n    },\r\n    {\r\n      name: 'South Africa',\r\n      alpha2Code: 'ZA',\r\n      alpha3Code: 'ZAF',\r\n      numericCode: '710'\r\n    },\r\n    {\r\n      name: 'South Sudan',\r\n      alpha2Code: 'SS',\r\n      alpha3Code: 'SSD',\r\n      numericCode: '728'\r\n    },\r\n    {\r\n      name: 'Spain',\r\n      alpha2Code: 'ES',\r\n      alpha3Code: 'ESP',\r\n      numericCode: '724'\r\n    },\r\n    {\r\n      name: 'Sri Lanka',\r\n      alpha2Code: 'LK',\r\n      alpha3Code: 'LKA',\r\n      numericCode: '144'\r\n    },\r\n    {\r\n      name: 'Sudan',\r\n      alpha2Code: 'SD',\r\n      alpha3Code: 'SDN',\r\n      numericCode: '729'\r\n    },\r\n    {\r\n      name: 'Suriname',\r\n      alpha2Code: 'SR',\r\n      alpha3Code: 'SUR',\r\n      numericCode: '740'\r\n    },\r\n    {\r\n      name: 'Sweden',\r\n      alpha2Code: 'SE',\r\n      alpha3Code: 'SWE',\r\n      numericCode: '752'\r\n    },\r\n    {\r\n      name: 'Switzerland',\r\n      alpha2Code: 'CH',\r\n      alpha3Code: 'CHE',\r\n      numericCode: '756'\r\n    },\r\n    {\r\n      name: 'Syrian Arab Republic',\r\n      alpha2Code: 'SY',\r\n      alpha3Code: 'SYR',\r\n      numericCode: '760'\r\n    },\r\n    {\r\n      name: 'Taiwan',\r\n      alpha2Code: 'TW',\r\n      alpha3Code: 'TWN',\r\n      numericCode: '158'\r\n    },\r\n    {\r\n      name: 'Tajikistan',\r\n      alpha2Code: 'TJ',\r\n      alpha3Code: 'TJK',\r\n      numericCode: '762'\r\n    },\r\n    {\r\n      name: 'Tanzania',\r\n      alpha2Code: 'TZ',\r\n      alpha3Code: 'TZA',\r\n      numericCode: '834'\r\n    },\r\n    {\r\n      name: 'Thailand',\r\n      alpha2Code: 'TH',\r\n      alpha3Code: 'THA',\r\n      numericCode: '764'\r\n    },\r\n    {\r\n      name: 'Timor-Leste',\r\n      alpha2Code: 'TL',\r\n      alpha3Code: 'TLS',\r\n      numericCode: '626'\r\n    },\r\n    {\r\n      name: 'Togo',\r\n      alpha2Code: 'TG',\r\n      alpha3Code: 'TGO',\r\n      numericCode: '768'\r\n    },\r\n    {\r\n      name: 'Tonga',\r\n      alpha2Code: 'TO',\r\n      alpha3Code: 'TON',\r\n      numericCode: '776'\r\n    },\r\n    {\r\n      name: 'Trinidad and Tobago',\r\n      alpha2Code: 'TT',\r\n      alpha3Code: 'TTO',\r\n      numericCode: '780'\r\n    },\r\n    {\r\n      name: 'Tunisia',\r\n      alpha2Code: 'TN',\r\n      alpha3Code: 'TUN',\r\n      numericCode: '788'\r\n    },\r\n    {\r\n      name: 'Turkey',\r\n      alpha2Code: 'TR',\r\n      alpha3Code: 'TUR',\r\n      numericCode: '792'\r\n    },\r\n    {\r\n      name: 'Turkmenistan',\r\n      alpha2Code: 'TM',\r\n      alpha3Code: 'TKM',\r\n      numericCode: '795'\r\n    },\r\n    {\r\n      name: 'Tuvalu',\r\n      alpha2Code: 'TV',\r\n      alpha3Code: 'TUV',\r\n      numericCode: '798'\r\n    },\r\n    {\r\n      name: 'Uganda',\r\n      alpha2Code: 'UG',\r\n      alpha3Code: 'UGA',\r\n      numericCode: '800'\r\n    },\r\n    {\r\n      name: 'Ukraine',\r\n      alpha2Code: 'UA',\r\n      alpha3Code: 'UKR',\r\n      numericCode: '804'\r\n    },\r\n    {\r\n      name: 'United Arab Emirates',\r\n      alpha2Code: 'AE',\r\n      alpha3Code: 'ARE',\r\n      numericCode: '784'\r\n    },\r\n    {\r\n      name: 'United Kingdom',\r\n      alpha2Code: 'GB',\r\n      alpha3Code: 'GBR',\r\n      numericCode: '826'\r\n    },\r\n    {\r\n      name: 'United States of America',\r\n      alpha2Code: 'US',\r\n      alpha3Code: 'USA',\r\n      numericCode: '840'\r\n    },\r\n    {\r\n      name: 'Uruguay',\r\n      alpha2Code: 'UY',\r\n      alpha3Code: 'URY',\r\n      numericCode: '858'\r\n    },\r\n    {\r\n      name: 'Uzbekistan',\r\n      alpha2Code: 'UZ',\r\n      alpha3Code: 'UZB',\r\n      numericCode: '860'\r\n    },\r\n    {\r\n      name: 'Vanuatu',\r\n      alpha2Code: 'VU',\r\n      alpha3Code: 'VUT',\r\n      numericCode: '548'\r\n    },\r\n    {\r\n      name: 'Venezuela',\r\n      alpha2Code: 'VE',\r\n      alpha3Code: 'VEN',\r\n      numericCode: '862'\r\n    },\r\n    {\r\n      name: 'Vietnam',\r\n      alpha2Code: 'VN',\r\n      alpha3Code: 'VNM',\r\n      numericCode: '704'\r\n    },\r\n    {\r\n      name: 'Yemen',\r\n      alpha2Code: 'YE',\r\n      alpha3Code: 'YEM',\r\n      numericCode: '887'\r\n    },\r\n    {\r\n      name: 'Zambia',\r\n      alpha2Code: 'ZM',\r\n      alpha3Code: 'ZMB',\r\n      numericCode: '894'\r\n    },\r\n    {\r\n      name: 'Zimbabwe',\r\n      alpha2Code: 'ZW',\r\n      alpha3Code: 'ZWE',\r\n      numericCode: '716'\r\n    }\r\n  ]\r\n;\r\n","<form>\r\n  <mat-form-field [appearance]=\"appearance\">\r\n    <mat-label *ngIf=\"label\">{{label}}</mat-label>\r\n    <mat-icon class=\"mr-12 s-20 secondary-text\" matSuffix\r\n              [svgIcon]=\"selectedCountry?.alpha2Code.toLowerCase()\"></mat-icon>\r\n    <input type=\"text\" [placeholder]=\"placeHolder\" aria-label=\"country\"\r\n           matInput [formControl]=\"countryFormControl\"\r\n           [matAutocomplete]=\"countryAutocomplete\" [readonly]=\"readonly\" [disabled]=\"disabled\"\r\n           (blur)=\"onBlur()\" (input)=\"inputChanged($event.target.value)\">\r\n    <mat-autocomplete #countryAutocomplete=\"matAutocomplete\" (opened)=\"autocompleteScroll()\" (optionSelected)=\"onOptionsSelected($event)\">\r\n      <mat-option *ngFor=\"let country of filteredOptions\" [value]=\"country?.name\">\r\n        <mat-icon [svgIcon]=\"country?.alpha2Code.toLowerCase()\"></mat-icon>\r\n        <small>{{country?.name}} - {{country?.alpha3Code}}</small>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {COUNTRIES_DB} from './db';\r\nimport {fromEvent, Subject, Subscription} from 'rxjs';\r\nimport {debounceTime, startWith, takeUntil} from 'rxjs/operators';\r\nimport {MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger} from '@angular/material/autocomplete';\r\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\r\n\r\n/**\r\n * Country interface ISO 3166\r\n */\r\nexport interface Country {\r\n  name: string;\r\n  alpha2Code: string;\r\n  alpha3Code: string;\r\n  numericCode: string;\r\n}\r\n\r\n/**\r\n * @author Anthony Nahas\r\n * @since 11.19\r\n * @version 1.0\r\n */\r\n@Component({\r\n  selector: 'mat-select-country',\r\n  templateUrl: 'mat-select-country.component.html',\r\n  styleUrls: ['mat-select-country.component.scss']\r\n})\r\nexport class MatSelectCountryComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() appearance: MatFormFieldAppearance;\r\n  @Input() country: string;\r\n  @Input() label: string;\r\n  @Input() placeHolder = 'Select country';\r\n  @Input() disabled: boolean;\r\n  @Input() nullable: boolean;\r\n  @Input() readonly: boolean;\r\n  @Input() itemsLoadSize: number;\r\n  @ViewChild('countryAutocomplete') statesAutocompleteRef: MatAutocomplete;\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n\r\n  @Output() onCountrySelected: EventEmitter<Country> = new EventEmitter<Country>();\r\n\r\n  countryFormControl = new FormControl();\r\n  selectedCountry: Country;\r\n  countries: Country[] = COUNTRIES_DB;\r\n  filteredOptions: Country[];\r\n\r\n  private modelChanged: Subject<string> = new Subject<string>();\r\n  private subscription: Subscription;\r\n  debounceTime = 300;\r\n\r\n  filterString = '';\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.modelChanged\r\n      .pipe(\r\n        startWith(''),\r\n        debounceTime(this.debounceTime),\r\n      )\r\n      .subscribe((value) => {\r\n        this.filterString = value;\r\n        this._filter(value);\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.country) {\r\n      if (changes.country.currentValue) {\r\n        const newValue = changes.country.currentValue.toUpperCase();\r\n        this.selectedCountry = this.countries.find(country =>\r\n          country.name.toUpperCase() === newValue\r\n          || country.alpha2Code === newValue\r\n          || country.alpha3Code === newValue\r\n          || country.numericCode === newValue\r\n        );\r\n        this.countryFormControl.setValue(\r\n          this.selectedCountry ? this.selectedCountry.name : ''\r\n        );\r\n      } else {\r\n        this.selectedCountry = undefined;\r\n        this.countryFormControl.setValue('');\r\n      }\r\n    }\r\n  }\r\n\r\n  private _filter(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    // if not filtered, fetch reduced array\r\n    if (this.itemsLoadSize && filterValue === '') {\r\n      this.filteredOptions = this.countries.slice(0, this.itemsLoadSize);\r\n    } else {\r\n      this.filteredOptions = this.countries.filter((option: Country) =>\r\n        option.name.toLowerCase().includes(filterValue)\r\n        || option.alpha2Code.toLowerCase().includes(filterValue)\r\n        || option.alpha3Code.toLowerCase().includes(filterValue)\r\n      );\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    if (this.countryFormControl.value || !this.nullable) {\r\n      this.countryFormControl.setValue(\r\n        this.selectedCountry ? this.selectedCountry.name : ''\r\n      );\r\n    } else if (this.selectedCountry) {\r\n      this.selectedCountry = null;\r\n      this.onCountrySelected.emit(null);\r\n    }\r\n  }\r\n\r\n  onOptionsSelected($event: MatAutocompleteSelectedEvent) {\r\n    this.selectedCountry = this.countries.find(country => country.name === $event.option.value);\r\n    this.onCountrySelected.emit(this.selectedCountry);\r\n  }\r\n\r\n  autocompleteScroll() {\r\n    if (this.itemsLoadSize) {\r\n      setTimeout(() => {\r\n        if (\r\n          this.statesAutocompleteRef &&\r\n          this.autocompleteTrigger &&\r\n          this.statesAutocompleteRef.panel\r\n        ) {\r\n          fromEvent(this.statesAutocompleteRef.panel.nativeElement, 'scroll')\r\n            .pipe(\r\n              takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n            )\r\n            .subscribe(() => {\r\n              const scrollTop = this.statesAutocompleteRef.panel.nativeElement\r\n                .scrollTop;\r\n              const scrollHeight = this.statesAutocompleteRef.panel.nativeElement\r\n                .scrollHeight;\r\n              const elementHeight = this.statesAutocompleteRef.panel.nativeElement\r\n                .clientHeight;\r\n              const atBottom = scrollHeight === scrollTop + elementHeight;\r\n              if (atBottom) {\r\n                // fetch more data if not filtered\r\n                if (this.filterString === '') {\r\n                  const fromIndex = this.filteredOptions.length;\r\n                  const toIndex: number = +this.filteredOptions.length + +this.itemsLoadSize;\r\n                  this.filteredOptions = [...this.filteredOptions, ...this.countries.slice(fromIndex, toIndex)];\r\n                }\r\n              }\r\n            });\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  inputChanged(value: string): void {\r\n    this.modelChanged.next(value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatSelectCountryComponent} from './mat-select-country.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {COUNTRIES_DB} from './db';\r\n\r\n\r\n/**\r\n * @author Anthony Nahas\r\n * @since 06.11.19\r\n */\r\n@NgModule({\r\n  declarations: [MatSelectCountryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule\r\n    // FlexLayoutModule\r\n  ],\r\n  exports: [MatSelectCountryComponent]\r\n})\r\nexport class MatSelectCountryModule {\r\n\r\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer) {\r\n    this.registerCountries();\r\n  }\r\n\r\n  registerCountries() {\r\n    for (const country of COUNTRIES_DB) {\r\n      const countryAlpha2Code = country.alpha2Code.toLowerCase();\r\n      this.iconRegistry\r\n        .addSvgIcon(countryAlpha2Code, this.sanitizer\r\n          .bypassSecurityTrustResourceUrl(`assets/svg-country-flags/svg/${countryAlpha2Code}.svg`));\r\n    }\r\n  }\r\n\r\n}\r\n"]}